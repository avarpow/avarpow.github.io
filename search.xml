<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>配置esp-idf开发环境</title>
      <link href="/2019/11/22/configure-esp-idf-environment/"/>
      <url>/2019/11/22/configure-esp-idf-environment/</url>
      
        <content type="html"><![CDATA[<p>最近入手ESP-32CAM，自带程序是网络摄像头，图片获取速度平均1.3s一帧，图片流获取速度一秒5帧左右，而且这1帧是所有请求共享的。。。<br>好吧，看在RMB50还自带摄像头的份子上也还不错了。<br>接下来，如果想要对它改写程序必须配置esp32-idf的环境。<br>当时什么都看，直接clone了master分支，master分支是v4.1的开发版本，为后来的的配环境的困难埋下隐患。<br>先根据<a href="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/get-started/index.html" target="_blank" rel="noopener">官方的入门文档  https://docs.espressif.com/projects/esp-idf/zh_CN/latest/get-started/index.html</a><br>笔者电脑里有三个python环境<br>1是anaconda的python2<br>2是Python3.6<br>3是miniconda的python3.7<br>在windows工具链安装过程中，使用python2和miniconda的python3.7均未能完成安装，采用python3.6成功安装。<br>当时它自动添加%IDF_PATH%的环境变量失败，手动添加解决<br>当windows下运行install.ps1脚本时候，因为powershell的权限原因未能运行成功。于是采用了cmd的install.bat<br>运行export.bat时候记得使用管理员模式，否则无法成功添加环境变量<br>“重要<br>ESP-IDF 编译系统不支持带有空格的路径。”<br>9102年了。。。。。<br>接下来尝试build example中的hello world项目<br>直接编译</p><figure class="highlight plain"><figcaption><span>build```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">出错</span><br></pre></td></tr></table></figure><p>Executing action: all (aliases: build)<br>Running ninja in directory c:\users\8192\desktop\feibiao\esp-idf\hello_world\build<br>Executing “ninja all”…<br>[263/859] Performing configure step for ‘bootloader’<br>FAILED: bootloader-prefix/src/bootloader-stamp/bootloader-configure<br>cmd.exe /C “cd /D C:\Users\8192\Desktop\feibiao\esp-idf\hello_world\build\bootloader &amp;&amp; C:\Users\8192.espressif\tools\cmake\3.13.4\bin\cmake.exe -DSDKCONFIG=C:/Users/8192/Desktop/feibiao/esp-idf/hello_world/sdkconfig -DIDF_PATH=C:/Users/8192/Desktop/feibiao/esp-idf -DIDF_TARGET=esp32 -DPYTHON_DEPS_CHECKED=1 -DPYTHON=C:\Users\8192.espressif\python_env\idf4.1_py3.6_env\Scripts\python.exe -DEXTRA_COMPONENT_DIRS=C:/Users/8192/Desktop/feibiao/esp-idf/components/bootloader -DLEGACY_INCLUDE_COMMON_HEADERS= -GNinja C:/Users/8192/Desktop/feibiao/esp-idf/components/bootloader/subproject &amp;&amp; C:\Users\8192.espressif\tools\cmake\3.13.4\bin\cmake.exe -E touch C:/Users/8192/Desktop/feibiao/esp-idf/hello_world/build/bootloader-prefix/src/bootloader-stamp/bootloader-configure”<br>– Found Git: C:/Program Files/Git/cmd/git.exe (found version “2.22.0.windows.1”)<br>– The C compiler identification is GNU 8.2.0<br>– The CXX compiler identification is GNU 8.2.0<br>– The ASM compiler identification is GNU<br>– Found assembler: C:/Users/8192/.espressif/tools/xtensa-esp32-elf/esp-2019r2-8.2.0/xtensa-esp32-elf/bin/xtensa-esp32-elf-gcc.exe<br>– Check for working C compiler: C:/Users/8192/.espressif/tools/xtensa-esp32-elf/esp-2019r2-8.2.0/xtensa-esp32-elf/bin/xtensa-esp32-elf-gcc.exe<br>– Check for working C compiler: C:/Users/8192/.espressif/tools/xtensa-esp32-elf/esp-2019r2-8.2.0/xtensa-esp32-elf/bin/xtensa-esp32-elf-gcc.exe – works<br>– Detecting C compiler ABI info<br>– Detecting C compiler ABI info - done<br>– Detecting C compile features<br>– Detecting C compile features - done<br>– Check for working CXX compiler: C:/Users/8192/.espressif/tools/xtensa-esp32-elf/esp-2019r2-8.2.0/xtensa-esp32-elf/bin/xtensa-esp32-elf-g++.exe<br>– Check for working CXX compiler: C:/Users/8192/.espressif/tools/xtensa-esp32-elf/esp-2019r2-8.2.0/xtensa-esp32-elf/bin/xtensa-esp32-elf-g++.exe – works<br>– Detecting CXX compiler ABI info<br>– Detecting CXX compiler ABI info - done<br>– Detecting CXX compile features<br>– Detecting CXX compile features - done<br>– Project version: v4.1-dev-1086-g93a8603c5<br>– Building ESP-IDF components for target esp32<br>– Adding linker script C:/Users/8192/Desktop/feibiao/esp-idf/components/esp32/ld/esp32.peripherals.ld<br>– Adding linker script C:/Users/8192/Desktop/feibiao/esp-idf/components/esp_rom/esp32/ld/esp32.rom.ld<br>– Adding linker script C:/Users/8192/Desktop/feibiao/esp-idf/components/esp_rom/esp32/ld/esp32.rom.newlib-funcs.ld<br>– Adding linker script C:/Users/8192/Desktop/feibiao/esp-idf/components/esp_rom/esp32/ld/esp32.rom.libgcc.ld<br>– Adding linker script C:/Users/8192/Desktop/feibiao/esp-idf/components/bootloader/subproject/main/ld/esp32/bootloader.ld<br>– Adding linker script C:/Users/8192/Desktop/feibiao/esp-idf/components/bootloader/subproject/main/ld/esp32/bootloader.rom.ld<br>– Components: bootloader bootloader_support efuse esp32 esp_common esp_rom esptool_py freertos log main micro-ecc partition_table soc spi_flash xtensa<br>– Component paths: C:/Users/8192/Desktop/feibiao/esp-idf/components/bootloader C:/Users/8192/Desktop/feibiao/esp-idf/components/bootloader_support C:/Users/8192/Desktop/feibiao/esp-idf/components/efuse C:/Users/8192/Desktop/feibiao/esp-idf/components/esp32 C:/Users/8192/Desktop/feibiao/esp-idf/components/esp_common C:/Users/8192/Desktop/feibiao/esp-idf/components/esp_rom C:/Users/8192/Desktop/feibiao/esp-idf/components/esptool_py C:/Users/8192/Desktop/feibiao/esp-idf/components/freertos C:/Users/8192/Desktop/feibiao/esp-idf/components/log C:/Users/8192/Desktop/feibiao/esp-idf/components/bootloader/subproject/main C:/Users/8192/Desktop/feibiao/esp-idf/components/bootloader/subproject/components/micro-ecc C:/Users/8192/Desktop/feibiao/esp-idf/components/partition_table C:/Users/8192/Desktop/feibiao/esp-idf/components/soc C:/Users/8192/Desktop/feibiao/esp-idf/components/spi_flash C:/Users/8192/Desktop/feibiao/esp-idf/components/xtensa<br>– Configuring done<br>CMake Error at …/…/…/tools/cmake/component.cmake:445 (add_library):<br>Cannot find source file:</p><pre><code>C:/Users/8192/Desktop/feibiao/esp-idf/components/bootloader/subproject/components/micro-ecc/micro-ecc/uECC.c</code></pre><p>Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm<br>.hpp .hxx .in .txx<br>Call Stack (most recent call first):<br>components/micro-ecc/CMakeLists.txt:2 (idf_component_register)</p><p>CMake Error at …/…/…/tools/cmake/component.cmake:445 (add_library):<br>No SOURCES given to target: __idf_micro-ecc<br>Call Stack (most recent call first):<br>components/micro-ecc/CMakeLists.txt:2 (idf_component_register)</p><p>– Build files have been written to: C:/Users/8192/Desktop/feibiao/esp-idf/hello_world/build/bootloader<br>[268/859] Building C object esp-idf/wpa_supplicant/CMakeFiles/__idf_wpa_supplicant.dir/src/crypto/des-internal.c.obj<br>ninja: build stopped: subcommand failed.<br>ninja failed with exit code 1</p><p>C:\Users\8192\Desktop\feibiao\esp-idf\hello_world&gt;<a href="http://idf.py" target="_blank" rel="noopener">idf.py</a> menuconfig<br>Executing action: menuconfig<br>Running ninja in directory c:\users\8192\desktop\feibiao\esp-idf\hello_world\build<br>Executing “ninja menuconfig”…<br>[0/1] cmd.exe /C “cd /D C:\Users\8192\Desktop\feibiao\esp-idf\hello_world\build &amp;&amp; C:\Users\8192.espressif…fig.env --env IDF_TARGET=esp32 --output config C:/Users/8192/Desktop/feibiao/esp-idf/hello_world/sdkconfig”<br>Loaded configuration ‘C:/Users/8192/Desktop/feibiao/esp-idf/hello_world/sdkconfig’<br>Configuration saved to ‘C:/Users/8192/Desktop/feibiao/esp-idf/hello_world/sdkconfig’</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">查看发现是缺少了micro-ecc下的文件</span><br><span class="line">于是先```idf.py build menuconfig``` 把设置中的Compatibility options中</span><br><span class="line">把Include headers accross components as before IDF V4.0选项打开</span><br><span class="line">重新build</span><br><span class="line">报一样的错误</span><br><span class="line"></span><br><span class="line">经过查看microecc目录发现存在makefile.mk但是源文件内容为空</span><br><span class="line"></span><br><span class="line">返回github上查看对应项目发现micro-ecc是一个git的submodule</span><br><span class="line"></span><br><span class="line">查询本地仓库的.gitsubmodule发现配置正确无误</span><br><span class="line">根据找到的资料执行</span><br></pre></td></tr></table></figure><p>git submodule update</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">报错</span><br></pre></td></tr></table></figure><p>fatal: could not get a repository handle for submodule ‘components/bootloader/subproject/components/micro-ecc/micro-ecc’</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">于是在本地删除了micro-ecc文件夹，尝试根据资料执行</span><br></pre></td></tr></table></figure><p>git submodule sync<br>git submodule update</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">报错</span><br></pre></td></tr></table></figure><p>Synchronizing submodule url for ‘components/asio/asio’<br>fatal: not a git repository: components/bootloader/subproject/components/micro-ecc/micro-ecc/…/…/…/…/…/…/.git/modules/components/bootloader/subproject/components/micro-ecc/micro-ecc<br>Synchronizing submodule url for ‘components/bootloader/subproject/components/micro-ecc/micro-ecc’</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">鉴于自动添加submodule的方式一直失败，选择手动添加micro-ecc仓库</span><br></pre></td></tr></table></figure><p>cd components/bootloader/subproject/components/micro-ecc<br>git clone <a href="https://github.com/kmackay/micro-ecc.git" target="_blank" rel="noopener">https://github.com/kmackay/micro-ecc.git</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">接下来执行</span><br></pre></td></tr></table></figure><p>git submodule update</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输出</span><br></pre></td></tr></table></figure><p>Submodule path ‘components/bootloader/subproject/components/micro-ecc/micro-ecc’: checked out ‘d037ec89546fad14b5c4d5456c2e23a71e554966’</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">再```idf.py build</span><br></pre></td></tr></table></figure><p>报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Executing action: all (aliases: build)</span><br><span class="line">Running ninja in directory c:\users\8192\desktop\feibiao\esp-idf\hello_world\build</span><br><span class="line">Executing &quot;ninja all&quot;...</span><br><span class="line">[65/514] Performing configure step for &apos;bootloader&apos;</span><br><span class="line">FAILED: bootloader-prefix/src/bootloader-stamp/bootloader-configure</span><br><span class="line">cmd.exe /C &quot;cd /D C:\Users\8192\Desktop\feibiao\esp-idf\hello_world\build\bootloader &amp;&amp; C:\Users\8192\.espressif\tools\cmake\3.13.4\bin\cmake.exe -DSDKCONFIG=C:/Users/8192/Desktop/feibiao/esp-idf/hello_world/sdkconfig -DIDF_PATH=C:/Users/8192/Desktop/feibiao/esp-idf -DIDF_TARGET=esp32 -DPYTHON_DEPS_CHECKED=1 -DPYTHON=C:\Users\8192\.espressif\python_env\idf4.1_py3.6_env\Scripts\python.exe -DEXTRA_COMPONENT_DIRS=C:/Users/8192/Desktop/feibiao/esp-idf/components/bootloader -DLEGACY_INCLUDE_COMMON_HEADERS=y -GNinja C:/Users/8192/Desktop/feibiao/esp-idf/components/bootloader/subproject &amp;&amp; C:\Users\8192\.espressif\tools\cmake\3.13.4\bin\cmake.exe -E touch C:/Users/8192/Desktop/feibiao/esp-idf/hello_world/build/bootloader-prefix/src/bootloader-stamp/bootloader-configure&quot;</span><br><span class="line">-- Project version: v4.1-dev-1086-g93a8603c5-dirty</span><br><span class="line">-- Building ESP-IDF components for target esp32</span><br><span class="line">CMake Error at C:/Users/8192/Desktop/feibiao/esp-idf/tools/cmake/build.cmake:185 (message):</span><br><span class="line">  Failed to resolve component &apos;micro-ecc&apos;.</span><br><span class="line">Call Stack (most recent call first):</span><br><span class="line">  C:/Users/8192/Desktop/feibiao/esp-idf/tools/cmake/build.cmake:216 (__build_resolve_and_add_req)</span><br><span class="line">  C:/Users/8192/Desktop/feibiao/esp-idf/tools/cmake/build.cmake:425 (__build_expand_requirements)</span><br><span class="line">  C:/Users/8192/Desktop/feibiao/esp-idf/tools/cmake/project.cmake:357 (idf_build_process)</span><br><span class="line">  CMakeLists.txt:27 (project)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- Configuring incomplete, errors occurred!</span><br><span class="line">See also &quot;C:/Users/8192/Desktop/feibiao/esp-idf/hello_world/build/bootloader/CMakeFiles/CMakeOutput.log&quot;.</span><br><span class="line">[70/514] Building C object esp-idf/wpa_supplicant...a_supplicant.dir/src/tls/tlsv1_server_write.c.objninja: build stopped: subcommand failed.</span><br><span class="line">ninja failed with exit code 1</span><br></pre></td></tr></table></figure><p>发现是当初删除micro-ecc文件夹时候，将CmakeList也一起删除了，从回收站里找回之后再<figure class="highlight plain"><figcaption><span>build```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">成功build hello_world项目</span><br><span class="line">成功信息如下</span><br><span class="line">```Executing action: all (aliases: build)</span><br><span class="line">Running ninja in directory c:\users\8192\desktop\feibiao\esp-idf\hello_world\build</span><br><span class="line">Executing &quot;ninja all&quot;...</span><br><span class="line">[116/445] Performing configure step for &apos;bootloader&apos;</span><br><span class="line">-- Project version: v4.1-dev-1086-g93a8603c5</span><br><span class="line">-- Building ESP-IDF components for target esp32</span><br><span class="line">-- Adding linker script C:/Users/8192/Desktop/feibiao/esp-idf/components/esp32/ld/esp32.peripherals.ld</span><br><span class="line">-- Adding linker script C:/Users/8192/Desktop/feibiao/esp-idf/components/esp_rom/esp32/ld/esp32.rom.ld</span><br><span class="line">-- Adding linker script C:/Users/8192/Desktop/feibiao/esp-idf/components/esp_rom/esp32/ld/esp32.rom.newlib-funcs.ld</span><br><span class="line">-- Adding linker script C:/Users/8192/Desktop/feibiao/esp-idf/components/esp_rom/esp32/ld/esp32.rom.libgcc.ld</span><br><span class="line">-- Adding linker script C:/Users/8192/Desktop/feibiao/esp-idf/components/bootloader/subproject/main/ld/esp32/bootloader.ld</span><br><span class="line">-- Adding linker script C:/Users/8192/Desktop/feibiao/esp-idf/components/bootloader/subproject/main/ld/esp32/bootloader.rom.ld</span><br><span class="line">-- Components: bootloader bootloader_support efuse esp32 esp_common esp_rom esptool_py freertos log main micro-ecc partition_table soc spi_flash xtensa</span><br><span class="line">-- Component paths: C:/Users/8192/Desktop/feibiao/esp-idf/components/bootloader C:/Users/8192/Desktop/feibiao/esp-idf/components/bootloader_support C:/Users/8192/Desktop/feibiao/esp-idf/components/efuse C:/Users/8192/Desktop/feibiao/esp-idf/components/esp32 C:/Users/8192/Desktop/feibiao/esp-idf/components/esp_common C:/Users/8192/Desktop/feibiao/esp-idf/components/esp_rom C:/Users/8192/Desktop/feibiao/esp-idf/components/esptool_py C:/Users/8192/Desktop/feibiao/esp-idf/components/freertos C:/Users/8192/Desktop/feibiao/esp-idf/components/log C:/Users/8192/Desktop/feibiao/esp-idf/components/bootloader/subproject/main C:/Users/8192/Desktop/feibiao/esp-idf/components/bootloader/subproject/components/micro-ecc C:/Users/8192/Desktop/feibiao/esp-idf/components/partition_table C:/Users/8192/Desktop/feibiao/esp-idf/components/soc C:/Users/8192/Desktop/feibiao/esp-idf/components/spi_flash C:/Users/8192/Desktop/feibiao/esp-idf/components/xtensa</span><br><span class="line">-- Configuring done</span><br><span class="line">-- Generating done</span><br><span class="line">-- Build files have been written to: C:/Users/8192/Desktop/feibiao/esp-idf/hello_world/build/bootloader</span><br><span class="line">[157/445] Performing build step for &apos;bootloader&apos;</span><br><span class="line">[1/65] Generating project_elf_src.c</span><br><span class="line">[2/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/esp32/cpu_util.c.obj</span><br><span class="line">[3/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/esp32/gpio_periph.c.obj</span><br><span class="line">[4/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/esp32/rtc_clk_init.c.obj</span><br><span class="line">[5/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/esp32/rtc_init.c.obj</span><br><span class="line">[6/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/esp32/rtc_clk.c.obj</span><br><span class="line">[7/65] Building C object CMakeFiles/bootloader.elf.dir/project_elf_src.c.obj</span><br><span class="line">[8/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/esp32/rtc_periph.c.obj</span><br><span class="line">[9/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/esp32/rtc_time.c.obj</span><br><span class="line">[10/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/esp32/rtc_sleep.c.obj</span><br><span class="line">[11/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/esp32/sdmmc_periph.c.obj</span><br><span class="line">[12/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/esp32/rtc_pm.c.obj</span><br><span class="line">[13/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/esp32/soc_memory_layout.c.obj</span><br><span class="line">[14/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/esp32/i2s_periph.c.obj</span><br><span class="line">[15/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/esp32/rtc_wdt.c.obj</span><br><span class="line">[16/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/src/memory_layout_utils.c.obj</span><br><span class="line">[17/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/esp32/sdio_slave_periph.c.obj</span><br><span class="line">[18/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/esp32/ledc_periph.c.obj</span><br><span class="line">[19/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/esp32/interrupts.c.obj</span><br><span class="line">[20/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/src/lldesc.c.obj</span><br><span class="line">[21/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/src/hal/spi_flash_hal_iram.c.obj</span><br><span class="line">[22/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/src/hal/spi_hal.c.obj</span><br><span class="line">[23/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/esp32/spi_periph.c.obj</span><br><span class="line">[24/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/src/hal/spi_flash_hal.c.obj</span><br><span class="line">[25/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/src/soc_include_legacy_warn.c.obj</span><br><span class="line">C:/Users/8192/Desktop/feibiao/esp-idf/components/soc/src/soc_include_legacy_warn.c:4:2: warning: #warning Legacy including is enabled. This will be deprecated in the future. You can disable this option in the menuconfig. If there are some including errors, please try to include: &quot;soc/soc.h&quot;, &quot;soc/soc_memory_layout.h&quot;, &quot;driver/gpio.h&quot;, or &quot;esp_sleep.h&quot;. [-Wcpp]</span><br><span class="line"> #warning Legacy including is enabled. This will be deprecated in the future. You can disable this option in the menuconfig. If there are some including errors, please try to include: &quot;soc/soc.h&quot;, &quot;soc/soc_memory_layout.h&quot;, &quot;driver/gpio.h&quot;, or &quot;esp_sleep.h&quot;.</span><br><span class="line">  ^~~~~~~</span><br><span class="line">[26/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/src/hal/spi_hal_iram.c.obj</span><br><span class="line">[27/65] Building C object esp-idf/log/CMakeFiles/__idf_log.dir/log.c.obj</span><br><span class="line">[28/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/src/hal/spi_slave_hal_iram.c.obj</span><br><span class="line">[29/65] Building C object esp-idf/soc/CMakeFiles/__idf_soc.dir/src/hal/spi_slave_hal.c.obj</span><br><span class="line">[30/65] Building C object esp-idf/efuse/CMakeFiles/__idf_efuse.dir/esp32/esp_efuse_table.c.obj</span><br><span class="line">[31/65] Building C object esp-idf/efuse/CMakeFiles/__idf_efuse.dir/src/esp_efuse_fields.c.obj</span><br><span class="line">[32/65] Building C object esp-idf/efuse/CMakeFiles/__idf_efuse.dir/src/esp32/esp_efuse_api.c.obj</span><br><span class="line">[33/65] Building C object esp-idf/efuse/CMakeFiles/__idf_efuse.dir/src/esp32/esp_efuse_fields.c.obj</span><br><span class="line">[34/65] Building C object esp-idf/efuse/CMakeFiles/__idf_efuse.dir/src/esp_efuse_api.c.obj</span><br><span class="line">[35/65] Linking C static library esp-idf\log\liblog.a</span><br><span class="line">[36/65] Building C object esp-idf/efuse/CMakeFiles/__idf_efuse.dir/src/esp32/esp_efuse_utility.c.obj</span><br><span class="line">[37/65] Building C object esp-idf/micro-ecc/CMakeFiles/__idf_micro-ecc.dir/micro-ecc/uECC.c.obj</span><br><span class="line">[38/65] Building C object esp-idf/bootloader_support/CMakeFiles/__idf_bootloader_support.dir/src/bootloader_clock.c.obj</span><br><span class="line">[39/65] Building C object esp-idf/efuse/CMakeFiles/__idf_efuse.dir/src/esp_efuse_utility.c.obj</span><br><span class="line">[40/65] Building C object esp-idf/spi_flash/CMakeFiles/__idf_spi_flash.dir/esp32/spi_flash_rom_patch.c.obj</span><br><span class="line">[41/65] Building C object esp-idf/bootloader_support/CMakeFiles/__idf_bootloader_support.dir/src/bootloader_common.c.obj</span><br><span class="line">[42/65] Building C object esp-idf/bootloader_support/CMakeFiles/__idf_bootloader_support.dir/src/bootloader_utility.c.obj</span><br><span class="line">[43/65] Building C object esp-idf/bootloader_support/CMakeFiles/__idf_bootloader_support.dir/src/bootloader_flash.c.obj</span><br><span class="line">[44/65] Building C object esp-idf/bootloader_support/CMakeFiles/__idf_bootloader_support.dir/src/esp_image_format.c.obj</span><br><span class="line">[45/65] Linking C static library esp-idf\soc\libsoc.a</span><br><span class="line">[46/65] Building C object esp-idf/bootloader_support/CMakeFiles/__idf_bootloader_support.dir/src/bootloader_random.c.obj</span><br><span class="line">[47/65] Building C object esp-idf/bootloader_support/CMakeFiles/__idf_bootloader_support.dir/src/flash_partitions.c.obj</span><br><span class="line">[48/65] Building C object esp-idf/bootloader_support/CMakeFiles/__idf_bootloader_support.dir/src/flash_qio_mode.c.obj</span><br><span class="line">[49/65] Building C object esp-idf/bootloader_support/CMakeFiles/__idf_bootloader_support.dir/src/esp32/bootloader_esp32.c.obj</span><br><span class="line">[50/65] Building C object esp-idf/bootloader_support/CMakeFiles/__idf_bootloader_support.dir/src/esp32/secure_boot.c.obj</span><br><span class="line">[51/65] Building C object esp-idf/bootloader_support/CMakeFiles/__idf_bootloader_support.dir/src/bootloader_efuse_esp32.c.obj</span><br><span class="line">[52/65] Linking C static library esp-idf\micro-ecc\libmicro-ecc.a</span><br><span class="line">[53/65] Building C object esp-idf/bootloader_support/CMakeFiles/__idf_bootloader_support.dir/src/bootloader_flash_config_esp32.c.obj</span><br><span class="line">[54/65] Building C object esp-idf/bootloader_support/CMakeFiles/__idf_bootloader_support.dir/src/esp32/bootloader_sha.c.obj</span><br><span class="line">[55/65] Building C object esp-idf/bootloader_support/CMakeFiles/__idf_bootloader_support.dir/src/esp32/flash_encrypt.c.obj</span><br><span class="line">[56/65] Building C object esp-idf/bootloader_support/CMakeFiles/__idf_bootloader_support.dir/src/bootloader_init.c.obj</span><br><span class="line">[57/65] Building C object esp-idf/bootloader_support/CMakeFiles/__idf_bootloader_support.dir/src/flash_encrypt.c.obj</span><br><span class="line">[58/65] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/bootloader_start.c.obj</span><br><span class="line">[59/65] Building C object esp-idf/bootloader_support/CMakeFiles/__idf_bootloader_support.dir/src/esp32/secure_boot_signatures.c.obj</span><br><span class="line">[60/65] Linking C static library esp-idf\bootloader_support\libbootloader_support.a</span><br><span class="line">[61/65] Linking C static library esp-idf\efuse\libefuse.a</span><br><span class="line">[62/65] Linking C static library esp-idf\spi_flash\libspi_flash.a</span><br><span class="line">[63/65] Linking C static library esp-idf\main\libmain.a</span><br><span class="line">[64/65] Linking C executable bootloader.elf</span><br><span class="line">[65/65] Generating binary image from built executable</span><br><span class="line">esptool.py v2.9-dev</span><br><span class="line">Generated C:/Users/8192/Desktop/feibiao/esp-idf/hello_world/build/bootloader/bootloader.bin</span><br><span class="line">[445/445] Generating binary image from built executable</span><br><span class="line">esptool.py v2.9-dev</span><br><span class="line">Generated C:/Users/8192/Desktop/feibiao/esp-idf/hello_world/build/hello-world.bin</span><br><span class="line"></span><br><span class="line">Project build complete. To flash, run this command:</span><br><span class="line">C:\Users\8192\.espressif\python_env\idf4.1_py3.6_env\Scripts\python.exe ..\components\esptool_py\esptool\esptool.py -p (PORT) -b 460800 --before default_reset --after hard_reset write_flash --flash_mode dio --flash_size detect --flash_freq 40m 0x1000 build\bootloader\bootloader.bin 0x8000 build\partition_table\partition-table.bin 0x10000 build\hello-world.bin</span><br><span class="line">or run &apos;idf.py -p (PORT) flash&apos;</span><br></pre></td></tr></table></figure></p><p>由于暂时还不想把板子里面的摄像头程序给覆盖掉，所以没有烧录程序。环境配置应该差不多了，主要是被git的submodule坑了一把</p>]]></content>
      
      
      
        <tags>
            
            <tag> esp32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>条件控制的④种写法</title>
      <link href="/2019/11/09/4condition/"/>
      <url>/2019/11/09/4condition/</url>
      
        <content type="html"><![CDATA[<p>众所周知，茴字有四种写法,C语言中的条件控制比茴字的写法更多一种。<br>这里分为三类：普通类，？：运算符，短路类。<br>##普通类<br>if和switch<br>易用性：★★★★<br>抽象性：★</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">int i=5;</span><br><span class="line">if(i==5)&#123;</span><br><span class="line">    printf(&quot;if condition\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">switch(i)&#123;</span><br><span class="line">    case 5:printf(&quot;switch condition\n&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>OUTPUT</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if condition</span><br><span class="line">switch condition</span><br></pre></td></tr></table></figure><p>##?:运算符<br>易用性：★★★★★<br>抽象性：★★★</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int i=5;</span><br><span class="line">i==5?printf(&quot;:? condition\n&quot;):1;</span><br></pre></td></tr></table></figure><p>OUTPUT</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:? condition</span><br></pre></td></tr></table></figure><p>##短路类<br>易用性：★★★<br>抽象性：★★★★★</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int i=5;</span><br><span class="line">i==5 &amp;&amp; (printf(&quot;&amp;&amp; condition\n&quot;),1);</span><br><span class="line">i==4 || (printf(&quot;|| condition\n&quot;),0);</span><br></pre></td></tr></table></figure><p>OUTPUT</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&amp;&amp; condition</span><br><span class="line">|| condition</span><br></pre></td></tr></table></figure><p>抽象程度实属有两个孙笑川</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>web_hw5</title>
      <link href="/2019/10/12/web-hw5/"/>
      <url>/2019/10/12/web-hw5/</url>
      
        <content type="html"><![CDATA[<p>作业要求</p><img src="/2019/10/12/web-hw5/calculator.jpg" title="code"><p><a href="/Calculator/">-&gt;最终效果&lt;-</a><br>三个小时打完作业，然而出现谜之bug：<br>如果在使用键盘enter键得出答案之前采用鼠标点击过按钮，则按enter键后会在运算式中重复输入最后一个字符<br>后发现是焦点问题使用enter相当于触发一次焦点上的按钮。<br>在键盘点击后加入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementById(&apos;equal&apos;).focus();</span><br></pre></td></tr></table></figure><p>在enter时候将焦点设置为equal键上解决</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>程设写迷惑代码第二周</title>
      <link href="/2019/09/25/strang-code2/"/>
      <url>/2019/09/25/strang-code2/</url>
      
        <content type="html"><![CDATA[<p>第二周又来写迷惑代码啦</p><img src="/2019/09/25/strang-code2/code.png" title="code"><p>一行迷惑的不能再迷惑的代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int y,m,md=0,temp,flag=0;</span><br><span class="line">    scanf(&quot;%d%d&quot;,&amp;y,&amp;m);</span><br><span class="line">    (y&gt;=0&amp;&amp;y&lt;=9999&amp;&amp;m&gt;=1&amp;&amp;m&lt;=12)?printf(&quot;%04d/%02d has %d days.\n&quot;,y,m,m==2?((y%100==0?(y%400==0?1:0):(y%4==0?1:0))==1?29:28):((m*2-15)&gt;0?(m*2-15):(15-m*2))%4==1?31:30):printf(&quot;Invalid Input Detected.\n&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2019/09/25/strang-code2/code2.jpg" title="code2"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    char c;</span><br><span class="line">    scanf(&quot;%c&quot;, &amp;c);</span><br><span class="line">    printf(&quot;%c\n&quot;, c - &apos;A&apos; + &apos;a&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2019/09/25/strang-code2/code3.jpg" title="code3"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int num1, num2;</span><br><span class="line">    scanf(&quot;%d%d&quot;, &amp;num1, &amp;num2);</span><br><span class="line">    printf(&quot;%d\n&quot;,num1%num2==0?num1+num2:num1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2019/09/25/strang-code2/code4.jpg" title="code4"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n, flag = 0;</span><br><span class="line">    scanf(&quot;%d&quot;, &amp;n);</span><br><span class="line">    printf(&quot;%d is%s a leap year.\n&quot;, n, (n % 100==0 ? (n % 400==0 ? 1 : 0 ): (n % 4==0 ? 1 : 0)) ? &quot;&quot; : &quot; not&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>啊，你说社么if？不存在的:不存在的;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>程设写迷惑代码第一天</title>
      <link href="/2019/09/18/%E7%A8%8B%E8%AE%BE%E5%86%99%E8%BF%B7%E6%83%91%E4%BB%A3%E7%A0%81%E7%AC%AC%E4%B8%80%E5%A4%A9/"/>
      <url>/2019/09/18/%E7%A8%8B%E8%AE%BE%E5%86%99%E8%BF%B7%E6%83%91%E4%BB%A3%E7%A0%81%E7%AC%AC%E4%B8%80%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<p>突然找到了写毒瘤代码的快感XDDDD:</p><h2 id="descrption"><a class="markdownIt-Anchor" href="#descrption"></a> Descrption</h2><p>输出 hello, world</p><p>别忘了换行哦 <sup>_</sup></p><h2 id="毒瘤代码一"><a class="markdownIt-Anchor" href="#毒瘤代码一"></a> 毒瘤代码一</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()&#123;</span><br><span class="line">    char s[13];</span><br><span class="line">    for(int i=0;i&lt;13;i++)&#123;</span><br><span class="line">        if(i==0)&#123;</span><br><span class="line">            int j=0;</span><br><span class="line">            while(j&lt;104)&#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            s[i]=j;</span><br><span class="line">        &#125;</span><br><span class="line">        if(i==1)&#123;</span><br><span class="line">            int j=0;</span><br><span class="line">            while(j&lt;101)&#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            s[i]=j;</span><br><span class="line">        &#125;</span><br><span class="line">        if(i==2)&#123;</span><br><span class="line">            int j=0;</span><br><span class="line">            while(j&lt;108)&#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            s[i]=j;</span><br><span class="line">        &#125;</span><br><span class="line">        if(i==3)&#123;</span><br><span class="line">            int j=0;</span><br><span class="line">            while(j&lt;108)&#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            s[i]=j;</span><br><span class="line">        &#125;</span><br><span class="line">        if(i==4)&#123;</span><br><span class="line">            int j=0;</span><br><span class="line">            while(j&lt;111)&#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            s[i]=j;</span><br><span class="line">        &#125;</span><br><span class="line">        if(i==5)&#123;</span><br><span class="line">            int j=0;</span><br><span class="line">            while(j&lt;44)&#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            s[i]=j;</span><br><span class="line">        &#125;</span><br><span class="line">        if(i==6)&#123;</span><br><span class="line">            int j=0;</span><br><span class="line">            while(j&lt;32)&#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            s[i]=j;</span><br><span class="line">        &#125;</span><br><span class="line">        if(i==7)&#123;</span><br><span class="line">            int j=0;</span><br><span class="line">            while(j&lt;119)&#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            s[i]=j;</span><br><span class="line">        &#125;</span><br><span class="line">        if(i==8)&#123;</span><br><span class="line">            int j=0;</span><br><span class="line">            while(j&lt;111)&#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            s[i]=j;</span><br><span class="line">        &#125;</span><br><span class="line">        if(i==9)&#123;</span><br><span class="line">            int j=0;</span><br><span class="line">            while(j&lt;114)&#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            s[i]=j;</span><br><span class="line">        &#125;</span><br><span class="line">        if(i==10)&#123;</span><br><span class="line">            int j=0;</span><br><span class="line">            while(j&lt;108)&#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            s[i]=j;</span><br><span class="line">        &#125;</span><br><span class="line">        if(i==11)&#123;</span><br><span class="line">            int j=0;</span><br><span class="line">            while(j&lt;100)&#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            s[i]=j;</span><br><span class="line">        &#125;</span><br><span class="line">        if(i==12)&#123;</span><br><span class="line">            int j=0;</span><br><span class="line">            while(j&lt;&apos;\n&apos;)&#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            s[i]=j;</span><br><span class="line">        &#125;</span><br><span class="line">        if(i==13)&#123;</span><br><span class="line">            int j=0;</span><br><span class="line">            while(j&lt;0)&#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            s[i]=j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;%s&quot;,s);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然而并没有逃过matrix的法眼</p><img src="/2019/09/18/程设写迷惑代码第一天/2222.jpg" title="duliu1"><h2 id="description"><a class="markdownIt-Anchor" href="#description"></a> Description</h2><p>计算两个整数a，b的和，整数范围为-1000&lt;a,b&lt;1000。</p><h2 id="毒瘤代码二"><a class="markdownIt-Anchor" href="#毒瘤代码二"></a> 毒瘤代码二</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    int a,b;</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;a);</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;b);</span><br><span class="line">    printf(&quot;%d\n&quot;,a^a^a^a^a^a^a^a^a-a-a-a-a+a+a+a+a+b^b^b^b^b-b-b-b-b+b+b+b+b);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="description-2"><a class="markdownIt-Anchor" href="#description-2"></a> Description</h2><p>In one week an employee works h hours (h is an integer and 0&lt;h&lt;168) at the hourly pay rate of 24.75 dollar. Assume a 40.0 hour normal work week and an overtime pay rate factor of 1.5.</p><p>What are the employee’s wages?</p><h2 id="毒瘤代码三"><a class="markdownIt-Anchor" href="#毒瘤代码三"></a> 毒瘤代码三</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()&#123;</span><br><span class="line">    int hours=0;</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;hours);</span><br><span class="line">    printf(&quot;%.2f\n&quot;, 24.75 * hours + (hours &gt; 40 ? 0.5f*24.75*(hours-40):0.0));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="description-3"><a class="markdownIt-Anchor" href="#description-3"></a> Description</h2><p>Write a program that reads in the radius and length of a cylinder and computes volume using the following formulas: area = radius * radius * PI volume = area * length PI = 3.14159</p><h2 id="毒瘤代码四"><a class="markdownIt-Anchor" href="#毒瘤代码四"></a> 毒瘤代码四</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()&#123;</span><br><span class="line">    double pi = 2,now=2.0/3,r,l;</span><br><span class="line">    scanf(&quot;%lf%lf&quot;,&amp;r,&amp;l);</span><br><span class="line">    for (int i = 1; i &lt; 30;pi = pi + now,now = now * (i + 1) / ((2 * (i + 1)) + 1),i++);</span><br><span class="line">    printf(&quot;%.4lf&quot;,pi*r*r*l);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>照这样写代码被打死可不要怪我。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>服务器修复系统&amp;ftp记</title>
      <link href="/2019/09/16/repair-ftp-sever/"/>
      <url>/2019/09/16/repair-ftp-sever/</url>
      
        <content type="html"><![CDATA[<p>自闭两小时=一篇博文<br>9月11日感谢hz大佬出给我一台fx8300+hd7770嘿嘿<br>并不熟练地搭建ftp，nginx，和teamviewer。<br>结果正常运行两天后</p><img src="/2019/09/16/repair-ftp-sever/s1.jpg" title="sever"><img src="/2019/09/16/repair-ftp-sever/s2.jpg" title="sever"><img src="/2019/09/16/repair-ftp-sever/s3.jpg" title="sever"><p>多次重启无效，电脑开着开着引导就不见了？？？？<br>接下来长时间重装系统<br>1.装完系统显卡只有DP有输出，HDMI无输出，且OW只有10帧，经排查是显卡驱动没有安装，多方查找驱动，最后还是靠360流氓软件才装好。<br>2.ping不通，关闭公网防火墙后解决<br>3.ftp方面选择 file zilla sever，结果发现长期无法连接服务器控制端。但是已经存在的用户可以正常访问。排查发现ftp zilla服务未开启。</p><img src="/2019/09/16/repair-ftp-sever/4.jpg" title="sever"><p>4.其他电脑但是采用windows文件资源管理提示找不到元素，且无法弹出用户名和密码的登录界面，万能的百度有解决方案</p><img src="/2019/09/16/repair-ftp-sever/5.jpg" title="sever"><img src="/2019/09/16/repair-ftp-sever/6.png" title="sever">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>有服务器啦</title>
      <link href="/2019/09/12/%E6%9C%89%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%95%A6/"/>
      <url>/2019/09/12/%E6%9C%89%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%95%A6/</url>
      
        <content type="html"><![CDATA[<p>捡了台FX8300+HD7770当服务器，我也终于有服务器了</p><img src="/2019/09/12/有服务器啦/2.jpg" title="sever"><p>电费+30 理智+30 肝脏-30</p><p>顺便在南实验楼测一下速度</p><img src="/2019/09/12/有服务器啦/1.png" title="speed_test"><p>百兆都没有，枯了</p><p>经过推荐用上了Mouse without board 好用，可惜鼠标有点点卡顿，如果做到teamviewer那样就好了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ip-tunnel技术</title>
      <link href="/2019/08/27/ip-tunnel%E6%8A%80%E6%9C%AF/"/>
      <url>/2019/08/27/ip-tunnel%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<p>穿透内网，连接动态ip，内网ip打洞-----p2p实现原理<br>来源：<a href="https://blog.csdn.net/zhngcho/article/details/82907846" target="_blank" rel="noopener">https://blog.csdn.net/zhngcho/article/details/82907846</a><br>（1）问题的由来：</p><p>大部分的电脑上网都是用动态ip地址。内网的ip是由net（路由、网关）分配的，net发出去的时候，映射到一个公网地址，这是一个动态计算的过程（特别是端口号），因此称为动态ip地址。外部网是无法直接访问内网计算机的，但在大部分情况下，借助一台有公网ip地址电脑（这里叫服务器），通过某种方式，可以实现连接，这种技术较“打洞”。</p><p>如图：</p><p>有一个私有网络192.168.0.2，client a是其中的一台计算机，这个网络的网关natA（一个nat设备）的外网ip是202.103.142.29(应该还有一个内网的ip地址，比如10.0.0.10)。如果client a中的某个进程（这个进程创建了一个socket,这个socket绑定1234端口）想访问外网主机129.208.12.38的2000端口，那么当数据包通过nat时会发生什么事情呢？</p><p>先nat会改变这个数据包的原ip地址，改为202.103.142.29。接着nat会为这个传输创建一个session（session是一个抽象的概念，如果是tcp，也许session是由一个syn包开始，以一个fin包结束。而udp呢，以这个ip的这个端口的第一个udp开始，结束不确定，也许是几分钟，也许是几小时，这要看具体的实现了）并且给这个session分配一个端口，比如62000，然后改变这个数据包的源端口为62000。所以本来是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.0.2:1234-&gt;129.208.12.38:2000</span><br></pre></td></tr></table></figure><p>的数据包到了互联网上变为了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">202.103.142.29:62000-&gt;129.208.12.38:2000</span><br></pre></td></tr></table></figure><p>一旦nat创建了一个session后，nat会记住62000端口对应的是192.168.0.2的1234端口，以后从129.208.12.38发送到62000端口的数据会被nat自动的转发到192.168.0.2上。（注意：这里是说129.208.12.38发送到62000端口的数据会被转发，其他的ip发送到这个端口的数据将被nat抛弃，这就是真正头痛的问题）这样client a就与server s1建立以了一个连接。</p><p>如果client a的原来那个socket(绑定了1234端口的那个udp socket)又接着向另外一个服务器server s2发送了一个udp包，那么这个udp包在通过nat时会怎么样呢？</p><p>答案是net决定的，不同的net有不同的答案。</p><p>这里需要介绍一下NAT的类型：<br>NAT设备的类型对于TCP穿越NAT,有着十分重要的影响,根据端口映射方式,NAT可分为如下4类,前3种NAT类型可统称为cone类型。<br>(1)全克隆( Full Cone) : NAT把所有来自相同内部IP地址和端口的请求映射到相同的外部IP地址和端口。任何一个外部主机均可通过该映射发送IP包到该内部主机。<br>(2)限制性克隆(Restricted Cone) : NAT把所有来自相同内部IP地址和端口的请求映射到相同的外部IP地址和端口。但是,只有当内部主机先给IP地址为X的外部主机发送IP包,该外部主机才能向该内部主机发送IP包。<br>(3)端口限制性克隆( Port Restricted Cone) :端口限制性克隆与限制性克隆类似,只是多了端口号的限制,即只有内部主机先向IP地址为X,端口号为P的外部主机发送1个IP包,该外部主机才能够把源端口号为P的IP包发送给该内部主机。<br>(4)对称式NAT ( Symmetric NAT) :这种类型的NAT与上述3种类型的不同,在于当同一内部主机使用相同的端口与不同地址的外部主机进行通信时, NAT对该内部主机的映射会有所不同。对称式NAT不保证所有会话中的私有地址和公开IP之间绑定的一致性。相反,它为每个新的会话分配一个新的端口号。</p><p>第一种最为理想，基本就是无需打洞；</p><p>第四种最糟糕，根本就不能打洞。好消息就是这种net基本没有，很少。</p><p>所以关键是第二和第三种net类型。</p><p>因此打洞的本质就是利用net的特性“只有当内部主机先给IP地址为X的外部主机发送IP包,该外部主机才能向该内部主机发送IP包”</p><p>（3）实现步骤（各个实现可能都不一样）</p><p>我们先假设一下：有一个服务器S在公网上有一个IP，两个私网分别由NAT-A和NAT-B连接到公网，NAT-A后面有一台客户端A，NAT-B 后面有一台客户端B，现在，我们需要借助S将A和B建立直接的TCP连接，即由B向A打一个洞，让A可以沿这个洞直接连接到B主机，就好像NAT-B不存在一样。<br>实现过程如下：<br>1、 S启动两个网络侦听，一个叫【主连接】侦听，一个叫【协助打洞】的侦听。<br>2、 A和B分别与S的【主连接】保持联系。<br>3、 当A需要和B建立直接的TCP连接时，首先连接S的【协助打洞】端口，并发送协助连接申请。同时在该端口号上启动侦听（保证net类型3也能成功）。注意由于要在相同的网络终端上绑定到不同的套接字上，所以必须为这些套接字设置 SO_REUSEADDR 属性（即允许重用），否则侦听会失败。<br>4、 S的【协助打洞】连接收到A的申请后通过【主连接】通知B，并将A经过NAT-A转换后的公网IP地址和端口等信息告诉B。<br>5、 B收到S的连接通知后首先与S的【协助打洞】端口连接，随便发送一些数据后立即断开，这样做的目的是让S能知道B经过NAT-B转换后的公网IP和端口号。<br>6、 B尝试与A的经过NAT-A转换后的公网IP地址和端口进行connect（这就是所谓“打洞”），根据不同的路由器会有不同的结果，有些路由器在这个操作就能建立连接（例如我用的TPLink R402），大多数路由器对于不请自到的SYN请求包直接丢弃而导致connect失败，但NAT-A会纪录此次连接的源地址和端口号，为接下来真正的连接做好了准备，这就是所谓的打洞，即B向A打了一个洞，下次A就能直接连接到B刚才使用的端口号了。<br>7、 客户端B打洞的同时在相同的端口上启动侦听。B在一切准备就绪以后通过与S的【主连接】回复消息“我已经准备好”，S在收到以后将B经过NAT-B转换后的公网IP和端口号告诉给A。<br>8、 A收到S回复的B的公网IP和端口号等信息以后，开始连接到B公网IP和端口号，由于在步骤6中B曾经尝试连接过A的公网IP地址和端口，NAT-A纪录 了此次连接的信息，所以当A主动连接B时，NAT-B会认为是合法的SYN数据，并允许通过，从而直接的TCP连接建立起来了。</p><p>（4）让内网主机做服务器</p><p>以上的应用主要在于做p2p软件，如果我们想用家里的电脑，做服务器，是不需要这项技术（“打洞”）的，应为我们可以把路由器设置为net1型，可以直接设置端口映射：</p><p>但还是需要一个外网固定ip的服务器来负责通知其他客服端，因为拨号时得到的ip（这其实也是外网ip，就是其他的计算机可以直接访问你的）每次还是变化的。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>上课摸鱼</title>
      <link href="/2019/08/27/%E4%B8%8A%E8%AF%BE%E6%91%B8%E9%B1%BC/"/>
      <url>/2019/08/27/%E4%B8%8A%E8%AF%BE%E6%91%B8%E9%B1%BC/</url>
      
        <content type="html"><![CDATA[<p>上课被推送了个<a href="https://github.com/taki0112/UGATIT" target="_blank" rel="noopener">UGATIT</a>就沉迷其中了23333.<br>现在无监督学习和GAN真火      <a href="https://github.com/taki0112/StyleGAN-Tensorflow" target="_blank" rel="noopener">StyleGAN</a>和<a href="https://github.com/taki0112/BigGAN-Tensorflow" target="_blank" rel="noopener">BigGAN</a>都好强<br>上课第一天顺便蹭课了数分,计组和Web<br>Web老师很强的样子，第一节课就把萌新吓得半死。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>一次失败的建模</title>
      <link href="/2019/08/20/%E4%B8%80%E6%AC%A1%E5%A4%B1%E8%B4%A5%E7%9A%84%E5%BB%BA%E6%A8%A1/"/>
      <url>/2019/08/20/%E4%B8%80%E6%AC%A1%E5%A4%B1%E8%B4%A5%E7%9A%84%E5%BB%BA%E6%A8%A1/</url>
      
        <content type="html"><![CDATA[<p>尝试解决高中时困扰了很久的三角洲式3d打印机控制方法，结果建模一个小时发现结构设计是错的。。。</p><img src="/2019/08/20/一次失败的建模/fail.jpg" title="fail"><p>（自由度不够了）</p><p>本着“自己解决不了的东西就交给别人解决”，查阅文献一篇</p><p>文中的球形铰和虎克铰是什么鬼啊。。。。。。</p><p>hook joint 直接用音译感觉很别扭</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">参考文献</span><br><span class="line">[1]周培,黄天宇.一种并联式3D打印机的设计与制造[J].科技通报,2017,33(09):89-91.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>dp问题</title>
      <link href="/2019/08/02/%E7%BA%BF%E6%80%A7dp/"/>
      <url>/2019/08/02/%E7%BA%BF%E6%80%A7dp/</url>
      
        <content type="html"><![CDATA[<h2 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h2><h3 id="最优子结构"><a class="markdownIt-Anchor" href="#最优子结构"></a> 最优子结构</h3><p>对于多阶段决策问题，如果每一个阶段的最优决策序列的子序列也是最优的，且决策序列具有“无后效性”，就可以将此决策方法理解为最优子结构。</p><h3 id="第二数学归纳法"><a class="markdownIt-Anchor" href="#第二数学归纳法"></a> 第二数学归纳法</h3><p>第二数学归纳法原理是设有一个与正整数n有关的命题，如果：<br>（1）当n=1，2时，命题成立；<br>（2）假设当n≤k（k∈N）时，命题成立，由此可推得当n=k+1时，命题也成立。<br>那么根据①②可得，命题对于一切正整数n来说都成立。</p><h2 id="最长递递减序列"><a class="markdownIt-Anchor" href="#最长递递减序列"></a> 最长递(递减)序列</h2><p>从一边开始，将端点确定为最优解，再向另一端刷新，类似第二数学归纳法。</p><h2 id="和时间有关的dp"><a class="markdownIt-Anchor" href="#和时间有关的dp"></a> 和时间有关的dp</h2><p>时间可逆，可以考虑从后向前dp</p><h2 id="背包问题"><a class="markdownIt-Anchor" href="#背包问题"></a> 背包问题</h2><p>背包问题指一类各个事件之间相互独立，每种事件有不同的状态可以选择，按照事件的状态dp。<br>有01背包，完全背包，有限背包，有依赖背包，树形背包等。<br>参考<a href="https://rpdreamer.blog.luogu.org/bei-bao-wen-ti" target="_blank" rel="noopener">背包问题</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加公式失败记</title>
      <link href="/2019/07/29/%E6%B7%BB%E5%8A%A0%E5%85%AC%E5%BC%8F%E5%A4%B1%E8%B4%A5%E8%AE%B0/"/>
      <url>/2019/07/29/%E6%B7%BB%E5%8A%A0%E5%85%AC%E5%BC%8F%E5%A4%B1%E8%B4%A5%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>添加支持公式显示，卸载marked渲染器，安装markdown it plus渲染器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-markdown-it-plus --save</span><br></pre></td></tr></table></figure><p>配置中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">markdown_it_plus:</span><br><span class="line">  highlight: true</span><br><span class="line">  html: true</span><br><span class="line">  xhtmlOut: true</span><br><span class="line">  breaks: true</span><br><span class="line">  langPrefix:</span><br><span class="line">  linkify: true</span><br><span class="line">  typographer:</span><br><span class="line">  quotes: “”‘’</span><br><span class="line">  plugins:</span><br><span class="line">    - plugin:</span><br><span class="line">        name: markdown-it-katex</span><br><span class="line">        enable: true</span><br><span class="line">    - plugin:</span><br><span class="line">        name: markdown-it-mark</span><br><span class="line">        enable: false</span><br></pre></td></tr></table></figure><p>html头部添加css，或模板文件中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link href=&quot;https://cdn.bootcss.com/KaTeX/0.7.1/katex.min.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br></pre></td></tr></table></figure><p>完成后渲染测试<br>然而实际情况如下</p><img src="/2019/07/29/添加公式失败记/fail.jpg" title="fail"><p>对比vscode插件的显示效果</p><img src="/2019/07/29/添加公式失败记/success.jpg" title="success"><p>一言难尽…<br>暂时还是用截图替代好了<br>以后有需求再改用支持mathjax渲染器</p>]]></content>
      
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加gitalk的艰难历程</title>
      <link href="/2019/07/27/%E6%B7%BB%E5%8A%A0gitalk%E5%8A%9F%E8%83%BD%E8%89%B0%E9%9A%BE%E5%8E%86%E7%A8%8B/"/>
      <url>/2019/07/27/%E6%B7%BB%E5%8A%A0gitalk%E5%8A%9F%E8%83%BD%E8%89%B0%E9%9A%BE%E5%8E%86%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>00:26 不蒜子的网页浏览量工具不错 添加一下<br>01:10 还算顺利地完成了<br>01:12 网上冲浪发现给gitalk的评论工具不错<br>02:04 跟着教程走,注册了github application,本地gitalk显示not found,可能推到git上可能就正常了吧<br>02:06 然而并不正常,一个一个翻issue查找解决方法<br>02:30 原来html里面的&lt;% %&gt;还有动态语言替换的功能,应该是这里错了<br>02:54 修改了还是不行,但是authorize打开的url好像有点不对劲<br>03:10 是动态替换没改,改了试一试<br>03:15 还是not found删掉这些东西试一试<br>03:25 为什么删掉了,再generate还存在？<br>03:30 是没有clean保留的缓存文件,clean之后再generate就可了<br>03:36 动态语言的替换加上逻辑判断的过程不懂,去掉逻辑判断<br>03:42 不动态引用了,直接写死,我就不信还不行了<br>03:48 可以了,wtmnb</p><p>总之gitalk装载成功,但是仍然不懂项目中yaml文件中的参数如何引用,逻辑判断到底是否生效,怎么运用动态替换语言</p>]]></content>
      
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm安装</title>
      <link href="/2019/07/26/npm%E5%AE%89%E8%A3%85/"/>
      <url>/2019/07/26/npm%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>在构建hexo博客的过程中，需要用到npm包，与python模块安装后全局可用不同，npm包分为本地包(当前项目可用)，全局包(命令行中直接用)<br>##如何安装本地包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd到需要安装包的目录</span><br><span class="line">执行npm install &lt;package_name&gt;</span><br></pre></td></tr></table></figure><p>##如何安装全局包<br>如果你想将其作为一个命令行工具，那么你应该将其安装到全局。这种安装方式后可以让你在任何目录下使用这个包。比如 grunt 就应该以这种方式安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">执行npm install -g &lt;package_name&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/07/22/hello-world/"/>
      <url>/2019/07/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
